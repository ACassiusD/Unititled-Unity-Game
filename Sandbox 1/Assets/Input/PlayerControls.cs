//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ad5d889d-8051-4160-beff-afbd9d8509d6"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9324aa9f-6334-4ae0-bc6f-4e7d47a7fac9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleRun"",
                    ""type"": ""Button"",
                    ""id"": ""c3878cbc-5672-46d5-99d0-86f293c0e039"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleMouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0e7e5598-9b5e-449d-9f6a-13eedb295b14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseButton1"",
                    ""type"": ""Button"",
                    ""id"": ""c8c6719a-278d-4aeb-8992-d043641711b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseButton2"",
                    ""type"": ""Button"",
                    ""id"": ""a21adffe-db79-43e1-ade4-a40eeaa93466"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""935a2939-db6d-4e45-b069-67b7658d18fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P"",
                    ""type"": ""Button"",
                    ""id"": ""f92f0f29-d5ad-4507-8f0c-31baed78a052"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""O"",
                    ""type"": ""Button"",
                    ""id"": ""a18a744d-051a-46e2-9b0b-99759fb92f57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""bcb41efe-f748-496e-82f1-1d5d126e1202"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ac6a3e0b-8285-4d5d-a289-e0ad527a51de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftControl"",
                    ""type"": ""PassThrough"",
                    ""id"": ""76b6de36-5604-4b39-b8eb-bed84b331cf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""tilde"",
                    ""type"": ""PassThrough"",
                    ""id"": ""25041e64-af16-4446-ae9c-14e6ab06fac6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BKey"",
                    ""type"": ""Button"",
                    ""id"": ""3c23316b-f6fe-4995-b75f-1fdcf04a455b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyNum1"",
                    ""type"": ""Button"",
                    ""id"": ""a3145c68-deff-4c82-a8d4-97301f8cb0f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyNum2"",
                    ""type"": ""Button"",
                    ""id"": ""18f98cc3-1f44-48b5-aa4a-f18a59b9e58f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0fbbd5a3-0cfc-4c2c-8914-f977e9922c00"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""137d3751-3cc3-4e35-ae05-317f3ff4da05"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9b2ce425-ab2c-49c0-89ff-200cff3b6111"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c8ec41cb-ee05-4a55-ac1e-36635349e884"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ba8bad39-c7d5-4284-87e7-894fac6a55c5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9a41fa11-9059-472f-bfcb-b95969288571"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleRun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f2b70bb-2861-4e14-8101-c4aaeaf4e495"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40fce3d-0771-400e-96e4-22aa8b8d609e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseButton1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f5727d1-ec48-4082-9c66-6138b06de470"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""847ca6f1-e8ea-437f-934d-0bfb447fe1cc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc256182-ad36-4aa1-ac63-b7c93b262e0b"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cca5355a-59ec-4a46-ae73-d495408999b3"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""O"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6a4fab8-0b7d-4675-8344-b04d939eef0a"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8db26b50-85b1-44d6-997c-8fc5bb10e2d6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""372bfd41-5313-4e29-918f-f4d5f9dadd32"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1a662c3-4eff-4d11-8940-c071916b2387"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""tilde"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9e1faa9-aa49-403d-bbe8-a30529833aed"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9632dfb5-53a3-4ae7-beef-f27755150ad1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyNum1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33a41cc2-655a-4477-a149-fe20e722610f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyNum2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_ToggleRun = m_Player.FindAction("ToggleRun", throwIfNotFound: true);
        m_Player_MiddleMouse = m_Player.FindAction("MiddleMouse", throwIfNotFound: true);
        m_Player_MouseButton1 = m_Player.FindAction("MouseButton1", throwIfNotFound: true);
        m_Player_MouseButton2 = m_Player.FindAction("MouseButton2", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_P = m_Player.FindAction("P", throwIfNotFound: true);
        m_Player_O = m_Player.FindAction("O", throwIfNotFound: true);
        m_Player_Y = m_Player.FindAction("Y", throwIfNotFound: true);
        m_Player_MouseLook = m_Player.FindAction("MouseLook", throwIfNotFound: true);
        m_Player_LeftControl = m_Player.FindAction("LeftControl", throwIfNotFound: true);
        m_Player_tilde = m_Player.FindAction("tilde", throwIfNotFound: true);
        m_Player_BKey = m_Player.FindAction("BKey", throwIfNotFound: true);
        m_Player_KeyNum1 = m_Player.FindAction("KeyNum1", throwIfNotFound: true);
        m_Player_KeyNum2 = m_Player.FindAction("KeyNum2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_ToggleRun;
    private readonly InputAction m_Player_MiddleMouse;
    private readonly InputAction m_Player_MouseButton1;
    private readonly InputAction m_Player_MouseButton2;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_P;
    private readonly InputAction m_Player_O;
    private readonly InputAction m_Player_Y;
    private readonly InputAction m_Player_MouseLook;
    private readonly InputAction m_Player_LeftControl;
    private readonly InputAction m_Player_tilde;
    private readonly InputAction m_Player_BKey;
    private readonly InputAction m_Player_KeyNum1;
    private readonly InputAction m_Player_KeyNum2;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @ToggleRun => m_Wrapper.m_Player_ToggleRun;
        public InputAction @MiddleMouse => m_Wrapper.m_Player_MiddleMouse;
        public InputAction @MouseButton1 => m_Wrapper.m_Player_MouseButton1;
        public InputAction @MouseButton2 => m_Wrapper.m_Player_MouseButton2;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @P => m_Wrapper.m_Player_P;
        public InputAction @O => m_Wrapper.m_Player_O;
        public InputAction @Y => m_Wrapper.m_Player_Y;
        public InputAction @MouseLook => m_Wrapper.m_Player_MouseLook;
        public InputAction @LeftControl => m_Wrapper.m_Player_LeftControl;
        public InputAction @tilde => m_Wrapper.m_Player_tilde;
        public InputAction @BKey => m_Wrapper.m_Player_BKey;
        public InputAction @KeyNum1 => m_Wrapper.m_Player_KeyNum1;
        public InputAction @KeyNum2 => m_Wrapper.m_Player_KeyNum2;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @ToggleRun.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleRun;
                @ToggleRun.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleRun;
                @ToggleRun.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleRun;
                @MiddleMouse.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleMouse;
                @MouseButton1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton1;
                @MouseButton1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton1;
                @MouseButton1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton1;
                @MouseButton2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton2;
                @MouseButton2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton2;
                @MouseButton2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseButton2;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @P.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnP;
                @P.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnP;
                @P.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnP;
                @O.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnO;
                @O.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnO;
                @O.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnO;
                @Y.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnY;
                @MouseLook.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                @MouseLook.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                @MouseLook.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseLook;
                @LeftControl.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftControl;
                @LeftControl.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftControl;
                @LeftControl.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftControl;
                @tilde.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTilde;
                @tilde.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTilde;
                @tilde.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTilde;
                @BKey.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBKey;
                @BKey.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBKey;
                @BKey.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBKey;
                @KeyNum1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum1;
                @KeyNum1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum1;
                @KeyNum1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum1;
                @KeyNum2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum2;
                @KeyNum2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum2;
                @KeyNum2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnKeyNum2;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @ToggleRun.started += instance.OnToggleRun;
                @ToggleRun.performed += instance.OnToggleRun;
                @ToggleRun.canceled += instance.OnToggleRun;
                @MiddleMouse.started += instance.OnMiddleMouse;
                @MiddleMouse.performed += instance.OnMiddleMouse;
                @MiddleMouse.canceled += instance.OnMiddleMouse;
                @MouseButton1.started += instance.OnMouseButton1;
                @MouseButton1.performed += instance.OnMouseButton1;
                @MouseButton1.canceled += instance.OnMouseButton1;
                @MouseButton2.started += instance.OnMouseButton2;
                @MouseButton2.performed += instance.OnMouseButton2;
                @MouseButton2.canceled += instance.OnMouseButton2;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @P.started += instance.OnP;
                @P.performed += instance.OnP;
                @P.canceled += instance.OnP;
                @O.started += instance.OnO;
                @O.performed += instance.OnO;
                @O.canceled += instance.OnO;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @MouseLook.started += instance.OnMouseLook;
                @MouseLook.performed += instance.OnMouseLook;
                @MouseLook.canceled += instance.OnMouseLook;
                @LeftControl.started += instance.OnLeftControl;
                @LeftControl.performed += instance.OnLeftControl;
                @LeftControl.canceled += instance.OnLeftControl;
                @tilde.started += instance.OnTilde;
                @tilde.performed += instance.OnTilde;
                @tilde.canceled += instance.OnTilde;
                @BKey.started += instance.OnBKey;
                @BKey.performed += instance.OnBKey;
                @BKey.canceled += instance.OnBKey;
                @KeyNum1.started += instance.OnKeyNum1;
                @KeyNum1.performed += instance.OnKeyNum1;
                @KeyNum1.canceled += instance.OnKeyNum1;
                @KeyNum2.started += instance.OnKeyNum2;
                @KeyNum2.performed += instance.OnKeyNum2;
                @KeyNum2.canceled += instance.OnKeyNum2;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnToggleRun(InputAction.CallbackContext context);
        void OnMiddleMouse(InputAction.CallbackContext context);
        void OnMouseButton1(InputAction.CallbackContext context);
        void OnMouseButton2(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnP(InputAction.CallbackContext context);
        void OnO(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnMouseLook(InputAction.CallbackContext context);
        void OnLeftControl(InputAction.CallbackContext context);
        void OnTilde(InputAction.CallbackContext context);
        void OnBKey(InputAction.CallbackContext context);
        void OnKeyNum1(InputAction.CallbackContext context);
        void OnKeyNum2(InputAction.CallbackContext context);
    }
}
